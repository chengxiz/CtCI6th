package cracking.ch2;
import cracking.ch2.SinglyLinkedList.Node;
public class Partition2_4 {
	private static Node Partition(Node<Integer> n, int i){
		Node head = new Node();
		Node tail = new Node();
		Node start = new Node();
		while (n.getNext()!=null){
			if (n.getElement() < i){
				if (head.getElement()==null){
					head.setElement(n.getElement());
					start = head;
				}
				else {
					head.setNext(new Node(n.getElement()));
				}
			}
			else {
				if (tail.getElement()==null){
					tail.setElement(n.getElement());
				}
				else {
					tail.setNext(new Node(n.getElement()));
				}				
			}
			n = n.getNext();
		}
		tail.setNext(null);
		head.setNext(tail);
		return start;
	}
	public static void main(String[] args) {
		SinglyLinkedList<Integer> l = new SinglyLinkedList<Integer>();
		l.addLast(7);
		l.addLast(1);
		l.addLast(6);
		l.addLast(5);
		l.addLast(9);
		l.addLast(5);		
		l.addLast(2);
		l.viewList();
		Node<Integer> s = Partition(l.head,5);
		// while (s.getNext()!=null) {
		// 	System.out.println(s.getElement());
		// }
	}
}
