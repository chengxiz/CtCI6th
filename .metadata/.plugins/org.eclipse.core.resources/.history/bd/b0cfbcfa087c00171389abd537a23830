package cracking.ch2;

public class ReturnKtoLast2_2 {
	private static SinglyLinkedList<Character> linkedList;
	private static int ReturnKLast_Rec(SinglyLinkedList.Node<Character> node, Integer k){
		if (node==null) return 0;
		int index = ReturnKLast_Rec(node.getNext(), k) + 1;
		if (index ==k) {
			System.out.println(node.getElement());
		}
		return index;
	}
	private static int ReturnKLast_WrapperRec(SinglyLinkedList.Node<Character> node, Integer k){
		class Index {
			public int value = 0;
		}
		private static SinglyLinkedList.Node<Character> ReturnKLast(SinglyLinkedList.Node<Character> node, Integer k){
			Index idx = new Index();
			ReturnKLast(node, k, idx);
		}
		private static SinglyLinkedList.Node<Character> ReturnKLast(SinglyLinkedList.Node<Character> node, Integer k, Index idx){
			if (node==null) return null;
			SinglyLinkedList.Node<Character> n = ReturnKLast(SinglyLinkedList.Node<Character> node.getNext(), Integer k, Index idx);
			idx.value++;
			if (idx.value == k){
				return  node;
			}
			return n;
		}
	}
	public static void main(String[] args) {
		linkedList = new SinglyLinkedList<Character>();
		linkedList.addLast('F');
		linkedList.addLast('O');
		linkedList.addLast('L');
		linkedList.addLast('L');
		linkedList.addLast('O');
		linkedList.addLast('W');
		linkedList.addLast(' ');
		linkedList.addLast('U');
		linkedList.addLast('P');
		linkedList.addLast('P');	
		int answer_Rec = ReturnKLast_Rec(linkedList.head,4);	
		System.out.println(answer_Rec);

		SinglyLinkedList<Character> answer_WrapperRec = ReturnKLast_WrapperRec(linkedList.head,4);
		System.out.println(answer_WrapperRec.getElement());

	}
}
